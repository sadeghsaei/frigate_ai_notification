blueprint:
  name: Frigate Notifications (telegram-07)
  author: sadeghsaei
  homeassistant:
    min_version: 2024.6.0
  description: |
    ## Frigate Notifications

  domain: automation
  source_url: https://github.com/sadeghsaei/frigate_ai_notification/blob/main/universal.yaml
  input:
    camera:
      name: Frigate Camera
      description: |
        Select the camera entity that will trigger notifications. 
        If you do not see cameras listed in the drop-down, check you have the Frigate integration installed.

        Note: The automation relies on the Frigate camera name matching the entity id in Home Assistant. It will automatically strip "_x" from the end of the entity id where x is a number If your camera name in frigate ends in _x you need to manually edit the yaml of this automation to add it twice e.g camera.front_1_1.
      selector:
        entity:
          integration: frigate
          domain: camera
          device_class: camera
    base_url:
      name: Base URL (Optional)
      description: |
        The external URL for your Home Assistant instance. 
        Must include the scheme i.e http:// or https://
        Examples: http://192.168.1.25:8123   https://homeassistant.mydomain.com
      default: ""
    mqtt_topic:
      name: MQTT Topic (Advanced)
      description: The MQTT topic Frigate sends messages in.
      default: frigate/events
    client_id:
      name: Client ID (Optional-Advanced)
      description: Used to support multiple instances of Frigate. Leave blank if you don't know what to do.
      default: ""
    notification_customisations:
      name: |
        # Notification Customisations
      description: These are Notification Customisation Options
      icon: mdi:bell
      collapsed: true
      input:
        title:
          name: Notification Title (Optional)
          description: The title of the notification.

          default: ""
        aiprompt:
          name: AI prompt
          description: The prompt to send to google.

          default: ""
        message:
          name: Notification Message
          description: |
            The message of the notification.
            You can use variables such as {{camera_name}} and {{label}}
            e.g., A {{ label }} {{ 'is loitering' if loitering else 'was detected' }} on the {{ camera_name }} camera.

          default: A {{ label }} {{ 'is loitering' if loitering else 'was detected' }} on the {{ camera_name }} camera.
          selector:
            select:
              options:
                - label: "Default:   e.g., A Person was detected on the Side camera."
                  value: "A {{ label }} {{ 'is loitering' if loitering else 'was detected' }} on the {{ camera_name }} camera."
                - label: "AI Generated"
                  value: "{{ label }} detected - {{ camera_name }} - Updating..."
                - label: "Short:     e.g., Person detected - Side"
                  value: "{{ label }} detected - {{ camera_name }}"
                - label: "Short with a timestamp HH:MM"
                  value: "{{ label }} detected - {{ camera_name }} at {{event['after']['start_time']|timestamp_custom('%H:%M')}}"
                - label: "Long:      e.g., A Person was detected on the Side camera in the driveway."
                  value: "A {{ label }} {{ 'is loitering' if loitering else 'was detected' }} on the {{ camera_name }} camera{% if enteredzones %} in the {{ enteredzones | join(', ') | replace('_',' ') }}{% endif %}."
                - label: "Long with a timestamp HH:MM"
                  value: "A {{ label }} {{ 'is loitering' if loitering else 'was detected' }} on the {{ camera_name }} camera{% if enteredzones %} in the {{ enteredzones | join(', ') | replace('_',' ') }}{% endif %} at {{event['after']['start_time']|timestamp_custom('%H:%M')}}."
              custom_value: true
        attachment:
          name: Attachment
          description: |
            Choose which image to attach to the notification.
          default: thumbnail.jpg
          selector:
            select:
              options:
                - label: Thumbnail
                  value: thumbnail.jpg
                - label: Snapshot
                  value: snapshot.jpg
                - label: Snapshot with bounding box
                  value: snapshot.jpg?bbox=1
                - label: Snapshot cropped
                  value: snapshot.jpg?crop=1
                - label: Snapshot cropped with bounding box
                  value: snapshot.jpg?bbox=1&crop=1
              mode: dropdown
    filters:
      name: |
        # Filters
      description: These are Filter Options
      icon: mdi:filter
      collapsed: true
      input:
        zone_filter:
          name: Zone Filter on/off (Optional)
          description: Enable to only notify if an object has entered a zone listed below.
          default: false
          selector:
            boolean:
        zones:
          name: Required Zones (Optional - Enabled Above)
          description: |
            Enter the name of one zone at a time. It must be lowercase and include underscores as per your Frigate config.
            By default any zone is acceptable. If you desire ALL listed zones to be entered before getting a notification, enable the multi toggle below.
          default: []
          selector:
            select:
              options:
                - examples
                - porch
                - front_door
                - side
                - garden
              multiple: true
              custom_value: true
        zone_multi:
          name: Multi-Zone (Optional)
          description: Require all zones specified above to be entered, instead of any listed zone. Zone Filter must be enabled also.
          default: false
          selector:
            boolean:
        labels:
          name: Object Filter (Optional)
          description: |
            Specify objects you wish to be notified about.  Enter or select one object at a time.
          default: ""
          selector:
            select:
              options:
                - person
                - dog
                - cat
                - car
                - package
                - bird
              multiple: true
              custom_value: true
        presence_filter:
          name: Presence Filter (Optional)
          description: Only notify if ALL of the selected presence entities are not "home".
          default: ""
          selector:
            entity:
              filter:
                domain:
                  - device_tracker
                  - person
                  - group
              multiple: true
        state_filter:
          name: State Filter on/off (Optional)
          description: Enable the two State Filter settings below. Only notify if the selected entity is in the specified states.
          default: false
          selector:
            boolean:
        state_entity:
          name: State Filter Entity (Optional)
          description: Only notify if the selected entity is in the below state. You must enable "State Filter" above to use this.
          default: ""
          selector:
            entity:
        state_filter_states:
          name: State Filter States (Optional)
          description: Enter the states that the above entity must be in, one at a time.
          default: []
          selector:
            select:
              options: []
              multiple: true
              custom_value: true
        disable_times:
          name: Time Filter (Optional)
          description: Prevent notifications from being sent during the specified hours
          default: []
          selector:
            select:
              multiple: true
              options:
                - label: 00:00 - 00:59
                  value: "0"
                - label: 01:00 - 01:59
                  value: "1"
                - label: 02:00 - 02:59
                  value: "2"
                - label: 03:00 - 03:59
                  value: "3"
                - label: 04:00 - 04:59
                  value: "4"
                - label: 05:00 - 05:59
                  value: "5"
                - label: 06:00 - 06:59
                  value: "6"
                - label: 07:00 - 07:59
                  value: "7"
                - label: 08:00 - 08:59
                  value: "8"
                - label: 09:00 - 09:59
                  value: "9"
                - label: 10:00 - 10:59
                  value: "10"
                - label: 11:00 - 11:59
                  value: "11"
                - label: 12:00 - 12:59
                  value: "12"
                - label: 13:00 - 13:59
                  value: "13"
                - label: 14:00 - 14:59
                  value: "14"
                - label: 15:00 - 15:59
                  value: "15"
                - label: 16:00 - 16:59
                  value: "16"
                - label: 17:00 - 17:59
                  value: "17"
                - label: 18:00 - 18:59
                  value: "18"
                - label: 19:00 - 19:59
                  value: "19"
                - label: 20:00 - 20:59
                  value: "20"
                - label: 21:00 - 21:59
                  value: "21"
                - label: 22:00 - 22:59
                  value: "22"
                - label: 23:00 - 23:59
                  value: "23"
        cooldown:
          name: Cooldown (Optional)
          description: Delay before sending another notification for this camera after the last event.
          default: 30
          selector:
            number:
              max: 86400
              min: 0
              unit_of_measurement: seconds
        custom_filter:
          name: Custom Filter (Optional - Advanced)
          description: A filter that must result in true or false but can be templated as necessary. You will need to ensure it is enclosed with appropriate \"quotes\" and \{\{brackets\}\}.
          default: true
        silence_timer:
          name: Silence New Object Notifications (Optional)
          description: |
            How long to silence notifications for this camera when requested as part of the actionable notification. 
            Note: This only applies to new objects. Existing tracked objects will not be affected.
          default: 30
          selector:
            number:
              max: 3600
              min: 0
              unit_of_measurement: minutes
        loiter_timer:
          name: Loitering Notifications (Optional)
          description: >
            Sends new loitering notification if a stationary object is detected for longer
            than the specified time. 0 is off and will not send notifications.
          default: 0
          selector:
            number:
              max: 3600
              min: 0
              unit_of_measurement: seconds
        initial_delay:
          name: Delay initial notification (Optional)
          description: |
            How long to delay the first notification for each event. 

            Use this if you DO NOT use "update image" and are experiencing notifications without attached images. Start with small numbers.
          default: 0
          selector:
            number:
              max: 15
              min: 0
              unit_of_measurement: seconds

mode: parallel
trigger_variables:
  input_camera: !input camera
  camera: "{{ input_camera | regex_replace('^camera\\.|_\\d+$', '') }}"
  mqtt_topic: !input mqtt_topic
trigger:
  - platform: mqtt
    topic: "{{mqtt_topic}}"
    payload: "{{ camera }}/new"
    value_template: "{{ value_json['after']['camera'] | lower | replace('-','_') }}/{{ value_json['type']}}"
    id: frigate-event
variables:
  ai_prompt: !input aiprompt
  input_camera: !input camera
  camera: "{{ input_camera | regex_replace('^camera\\.', '') }}"
  camera_name: "{{ camera | replace('_', ' ') | title }}"
  input_base_url: !input base_url
  base_url: "{{ input_base_url.rstrip('/')}}"
  input_client_id: !input client_id
  client_id: "{{input_client_id if not input_client_id else '/' + input_client_id if '/' not in input_client_id else input_client_id }}"
  attachment: !input attachment
  zone_only: !input zone_filter
  input_zones: !input zones
  zones: "{{ input_zones }}"
  zone_multi: !input zone_multi
  input_labels: !input labels
  labels: "{{ input_labels | list | lower }}"
  presence_entity: !input presence_filter
  disable_times: !input disable_times
  cooldown: !input cooldown
  loitering: false
  loiter_timer: !input loiter_timer
  initial_delay: !input initial_delay
  fps: "{{ states('sensor.' + camera + '_camera_fps')|int(5) }}"
  state_only: !input state_filter
  input_entity: !input state_entity
  input_states: !input state_filter_states
  states_filter: "{{ input_states | list | lower }}"

action:
  - choose:
      - alias: "Frigate Event"
        conditions:
          - condition: trigger
            id: "frigate-event"
          - "{{ is_state(this.entity_id, 'on') }}"
          - "{{ not this.attributes.last_triggered or (now() - this.attributes.last_triggered).seconds > cooldown }}"
          - "{{ not disable_times|length or not now().hour in disable_times|map('int')|list }}"
        sequence:
          - variables:
              event: "{{ trigger.payload_json }}"
              id: "{{ trigger.payload_json['after']['id'] }}"
              object: "{{ trigger.payload_json['after']['label'] }}"
              label: "{{ object | title }}"
              # Dynamic Variables per event
              initial_home: "{{presence_entity |reject('in', '') |select('is_state', 'home') |list |length != 0 }}"
              enteredzones: "{{ trigger.payload_json['after']['entered_zones']}}"
              zone_multi_filter: "{{zone_only and zone_multi and enteredzones|length and zones and zones |reject('in', enteredzones) |list |length == 0 }}"
              loitering: false
              # Customisation of text
              title: !input title
              message: !input message
              # other things that can be templated and might need info from the event
              custom_filter: !input custom_filter
          - alias: "Delay for image"
            choose:
              - conditions:
                  - "{{initial_delay > 0}}"
                sequence:
                  - delay:
                      seconds: "{{initial_delay}}"
          #- alias: "Telegram Normal Image"
          #  action: telegram_bot.send_photo
          #  data:
          #    url: "{{base_url}}/api/frigate{{client_id}}/notifications/{{id}}/{{attachment}}{{'&' if '?' in attachment else '?'}}format=android"
          #    caption: "{{message}}"
          - alias: "Send Photos to Google Gemini"
            sequence:
              - data:
                  filename: /config/www/tmp/snapshot-{{ camera }}-1.jpg
                target:
                  entity_id: '{{ input_camera }}'
                enabled: true
                action: camera.snapshot
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 0
                  milliseconds: 700
                enabled: true
              - data:
                  filename: /config/www/tmp/snapshot-{{ camera }}-2.jpg
                target:
                  entity_id: '{{ input_camera }}'
                enabled: true
                action: camera.snapshot
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 0
                  milliseconds: 700
                enabled: true
              - data:
                  filename: /config/www/tmp/snapshot-{{ camera }}-3.jpg
                target:
                  entity_id: '{{ input_camera }}'
                enabled: true
                action: camera.snapshot
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 0
                  milliseconds: 700
                enabled: true
              - data:
                  filename: /config/www/tmp/snapshot-{{ camera }}-4.jpg
                target:
                  entity_id: '{{ input_camera }}'
                enabled: true
                action: camera.snapshot
              - metadata: {}
                data:
                  prompt: '{{ai_prompt}}'
                  image_filename:
                    - /config/www/tmp/snapshot-{{ camera }}-1.jpg
                    - /config/www/tmp/snapshot-{{ camera }}-2.jpg
                    - /config/www/tmp/snapshot-{{ camera }}-3.jpg
                    - /config/www/tmp/snapshot-{{ camera }}-4.jpg
                response_variable: generated_content
                action: google_generative_ai_conversation.generate_content
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
                enabled: true
          - alias: "Telegram Image and AI Description"
            action: telegram_bot.send_photo
            data:
              url: "{{base_url}}/api/frigate{{client_id}}/notifications/{{id}}/{{attachment}}{{'&' if '?' in attachment else '?'}}format=android"
              caption: "{{ camera }} - {{generated_content.text}}"
          - alias: "Delay for video to be Ready"
            sequence:
              - delay:
                  seconds: 10
          - alias: "Telegram AI Video"
            action: telegram_bot.send_video
            data:
              url: "{{base_url}}/api/frigate{{client_id}}/notifications/{{id}}/{{camera + '/clip.mp4'}}"
              caption: "{{ camera }} - Video Footage"
